import"./assets/styles-BK7AYJoX.js";import{a}from"./assets/vendor-N5iQpiFS.js";const r={categories:document.querySelector(".categories"),products:document.querySelector(".products"),input:document.querySelector(".search-form__input"),form:document.querySelector(".search-form"),notFound:document.querySelector(".not-found"),modalProduct:document.querySelector(".modal-product"),modalWindow:document.querySelector(".modal"),modalCloseBtn:document.querySelector(".modal__close-btn")};function g(){r.products.innerHTML=""}a.defaults.baseURL="https://dummyjson.com/products";async function y(){try{const t=await a.get("/category-list").then(e=>e.data);return console.log("fetchCategories",t),t}catch(t){console.log(`fetch categories ${t}`)}}async function f(t=1){try{const e=await a.get(`?limit=12&skip=${(t-1)*12}`).then(o=>o.data);return console.log("fetchAllProducts",e),e}catch(e){console.log(`fetch all products ${e}`)}}async function u(t){try{const e=await a.get(`${t}`).then(o=>o.data);return console.log("fetchProductsById",e),e}catch(e){console.log(`fetch products by id ${e}`)}}async function l(t){try{const e=await a.get(`search?q=${t}`).then(o=>o.data);return console.log("fetchProductsByQuery",e),e}catch(e){console.log(`fetch products by query ${e}`)}}async function h(t,e=1){try{const o=await a.get(`category/${t}?limit=12&skip=${(e-1)*12}`).then(c=>c.data);return console.log("fetchProductsByCategory",o),o}catch(o){console.log(`fetch products by category ${o}`)}}function _(){r.modalWindow.addEventListener("click",m),r.modalCloseBtn.addEventListener("click",s),document.addEventListener("keydown",p)}function $(){r.modalWindow.removeEventListener("click",m),r.modalCloseBtn.removeEventListener("click",s),document.removeEventListener("keydown",p)}function L(){r.modalWindow.classList.add("modal--is-open"),_()}function s(){r.modalWindow.classList.remove("modal--is-open"),$()}function p(t){if(t.key==="Escape")s();else return}function m(t){if(t.target===r.modalWindow)s();else return}async function v(t){try{t.innerHTML="";const o=(await y()).map(c=>`<li class="categories__item">
 <button class="categories__btn" type="button">${c}</button>
</li>`).join("");t.insertAdjacentHTML("beforeEnd",o)}catch(e){console.log(`render categories ${e}`)}}async function d(t,e){try{e.innerHTML="";const c=(await t).products.map(n=>`<li class="products__item" data-id="${n.id}">
    <img class="products__image" src="${n.thumbnail}" alt="${n.title}"/>
    <p class="products__title">${n.title}</p>
    <p class="products__brand"><span class="products__brand--bold">Brand: ${n.brand}</span></p>
    <p class="products__category">Category: ${n.category}</p>
    <p class="products__price">Price: ${n.price}$</p>
 </li>`).join("");e.insertAdjacentHTML("beforeEnd",c)}catch(o){console.log(`render products ${o}`)}}async function b(t,e){try{t.innerHTML="";const o=await u(e),c=`<img class="modal-product__img" src="${o.thumbnail}" alt="${o.title}" />
      <div class="modal-product__content">
        <p class="modal-product__title">${o.title}</p>
        <ul class="modal-product__tags">${o.tags}</ul>
        <p class="modal-product__description">${o.description}</p>
        <p class="modal-product__shipping-information">Shipping: ${o.shippingInformation}</p>
        <p class="modal-product__return-policy">Return Policy: ${o.returnPolicy}</p>
        <p class="modal-product__price">Price: ${o.price}$</p>
      </div>`;t.insertAdjacentHTML("beforeEnd",c),L()}catch(o){console.log(`render products ${o}`)}}function P(t,e){localStorage.setItem(t,JSON.stringify(e))}function i(t){try{return JSON.parse(localStorage.getItem(t))}catch(e){console.log(`load from local storage ${e}`)}}function S(t){localStorage.removeItem(t)}function k(t){r.notFound.classList.remove("not-found--visible"),t.preventDefault();const e=r.input.value.trim();S("searchKey");try{l(e).then(o=>{o.products.length>0?d(l(e),r.products):(g(),r.notFound.classList.add("not-found--visible"))})}catch(o){console.log(`searchProducts ${o}`)}r.input.value=""}function w(){P("searchKey",r.input.value)}function C(t){t.target.classList.contains("categories__btn")&&d(h(t.target.textContent),r.products)}function E(t){const e=t.target.closest(".products__item");if(e&&r.products.contains(e)){const o=e.dataset.id;b(r.modalProduct,o)}else return}v(r.categories);d(f(1),r.products);r.input.value=i("searchKey")?i("searchKey"):"";r.input.addEventListener("input",w);r.form.addEventListener("submit",k);r.categories.addEventListener("click",C);u(2);r.products.addEventListener("click",E);
//# sourceMappingURL=index.js.map
